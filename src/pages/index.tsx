import Head from "next/head";
import { RootLayout } from "../components/Layout";
import { EmployerTable } from "@/components/EmployerTable";
import {
  Heading,
  Modal,
  ModalContent,
  ModalOverlay,
  Stack,
} from "@chakra-ui/react";
import {
  Dispatch,
  SetStateAction,
  createContext,
  useRef,
  useState,
} from "react";
import { Employer } from "@/types/Employer";
import { ModalTypes } from "@/types/Modals";
import { getDashboardModal } from "@/components/Modals";
import { defineHomeGreeting } from "@/lib/dateUtils";

interface IDashboardModal {
  isOpen: boolean;
  modalType: ModalTypes;
  employee: Employer | undefined;
}
interface IHomeContext {
  dashboardModal: IDashboardModal;
  setCurrentEditingEmployer: Dispatch<
    SetStateAction<Partial<Employer> | undefined>
  >;
  setDashboardModal: Dispatch<SetStateAction<IDashboardModal>>;
  currentEditingEmployer: Partial<Employer> | undefined;
}

export const defaultHomeModalState = {
  isOpen: false,
  modalType: ModalTypes.ADD_EMPLOYER,
  employee: undefined,
};

export const HomeContext = createContext<IHomeContext>({
  dashboardModal: defaultHomeModalState,
  setDashboardModal: () => {},
  setCurrentEditingEmployer: () => {},
  currentEditingEmployer: undefined,
});

export const HomeModals = {};
export default function Home() {
  const [currentEditingEmployer, setCurrentEditingEmployer] = useState<
    Partial<Employer> | undefined
  >(undefined);
  const [dashboardModal, setDashboardModal] = useState<IDashboardModal>(
    defaultHomeModalState
  );
  const finalRef = useRef(null);
  return (
    <>
      <Head>
        <title>React Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <RootLayout navbarText="Dashboard App">
        <HomeContext.Provider
          value={{
            dashboardModal: dashboardModal,
            setDashboardModal: setDashboardModal,
            currentEditingEmployer: currentEditingEmployer,
            setCurrentEditingEmployer: setCurrentEditingEmployer,
          }}
        >
          <Stack spacing={5}>
            <Heading as="h2" size="lg">
              {defineHomeGreeting()} üëãüèº
            </Heading>
            <EmployerTable />
          </Stack>
          <Modal
            finalFocusRef={finalRef}
            isOpen={dashboardModal.isOpen}
            onClose={() => setDashboardModal(defaultHomeModalState)}
            size="xl"
            isCentered
          >
            <ModalOverlay bg="blackAlpha.300" backdropFilter="blur(10px)" />
            <ModalContent padding="1rem">
              {getDashboardModal(dashboardModal.modalType)}
            </ModalContent>
          </Modal>
        </HomeContext.Provider>
      </RootLayout>
    </>
  );
}
